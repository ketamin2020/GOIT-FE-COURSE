{"version":3,"sources":["components-feedback/FeedbackOptions.js","components-feedback/section.js","components-feedback/Statistics.js","components-feedback/Notification.js","components-feedback/Feedback.js","components-phonebook/ContactCreator.js","components-phonebook/ContactList.js","components-phonebook/Section.js","components-phonebook/FilterContact.js","components-phonebook/Phonebook.js","App.js","index.js"],"names":["FeedbackOptions","addFeedback","value","onClick","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Feedback","state","handleAddedFeedback","e","buttonName","target","setState","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","goodVoices","percentageValue","Math","floor","this","percentage","Component","ContactCreator","name","number","handleAddContact","handleSubmit","createTask","props","preventDefault","onSubmit","type","placeholder","onChange","ContactList","items","removeContact","className","map","id","contact","key","filterContact","onChangeFilter","Phonebook","contacts","filter","changeFilter","contactId","prevState","showSortTask","toLowerCase","includes","contactName","some","alert","uuidv4","sortTask","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f7d97db.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction FeedbackOptions({ addFeedback }) {\n  return (\n    <div>\n      <button value=\"good\" onClick={addFeedback}>\n        Good\n      </button>\n      <button value=\"neutral\" onClick={addFeedback}>\n        Neutral\n      </button>\n      <button value=\"bad\" onClick={addFeedback}>\n        Bad\n      </button>\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  addFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <ul>\n        <li>Good: {good}</li>\n        <li>Netural: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Positive feedback: {positivePercentage}%</li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Section from \"./section\";\nimport Statistics from \"./Statistics\";\nimport Notification from \"./Notification\";\n\nexport default class Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleAddedFeedback = (e) => {\n    const buttonName = e.target.value;\n    this.setState({\n      [buttonName]: this.state[buttonName] + 1,\n    });\n  };\n\n  countTotalFeedback = () => {\n    const values = Object.values(this.state);\n    const totalValue = values.reduce((acc, item) => {\n      acc += item;\n      return acc;\n    }, 0);\n    return totalValue;\n  };\n\n  countPositiveFeedbackPercentage = (total) => {\n    const goodVoices = this.state.good;\n    let percentageValue = 0;\n    if (goodVoices || total !== 0) {\n      percentageValue = Math.floor((goodVoices / total) * 100);\n    }\n    return percentageValue;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage(total);\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions addFeedback={this.handleAddedFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={percentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class ContactCreator extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleAddContact = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    const { createTask } = this.props;\n    e.preventDefault();\n    createTask(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"name\"\n              value={this.state.name}\n              onChange={this.handleAddContact}\n            />\n          </label>\n\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"tel.number\"\n              value={this.state.number}\n              onChange={this.handleAddContact}\n            />\n          </label>\n\n          <button type=\"submit\"> Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ContactList extends Component {\n  render() {\n    const { items, removeContact } = this.props;\n    return (\n      <ul className=\"items\">\n        {items.map(({ id, name, contact }) => (\n          <li key={id} className=\"list\">\n            <p>{name}:</p> <p>{contact}</p>\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => removeContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nContactList.propTypes = {\n  items: PropTypes.array.isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nexport default function filterContact({ value, onChangeFilter }) {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Search Contact\"\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nfilterContact.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactCreator from \"./ContactCreator\";\nimport ContactList from \"./ContactList\";\nimport Section from \"./Section\";\nimport FilterContact from \"./FilterContact\";\n\nexport default class Phonebook extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  showSortTask = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  createTask = (contactName, number) => {\n    const sameName = this.state.contacts.some(\n      (item) => item.name === contactName\n    );\n\n    if (sameName) {\n      alert(`${contactName} is already in contacts`);\n      return;\n    } else if (!contactName || !number) {\n      alert(\"Enter phone number or name\");\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name: contactName,\n      contact: number,\n    };\n\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n  render() {\n    const sortTask = this.showSortTask();\n    const { contacts, filter } = this.state;\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <ContactCreator createTask={this.createTask} />\n        </Section>\n        <Section title={contacts.length > 0 && \"Contacts\"}>\n          {contacts.length > 1 && (\n            <FilterContact value={filter} onChangeFilter={this.changeFilter} />\n          )}\n\n          <ContactList items={sortTask} removeContact={this.removeContact} />\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Feedback from \"./components-feedback/Feedback\";\nimport Phonebook from \"./components-phonebook/Phonebook\";\nexport default function App() {\n  return (\n    <>\n      <Feedback />\n      <Phonebook />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"../src/styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}